## 训练结果
t Loss:  0.49,  Test Acc: 87.67%
Precision, Recall and F1-Score...
              precision    recall  f1-score   support

          财经     0.9566    0.9480    0.9523      1000
          时政     0.8258    0.8630    0.8440      1000
          房产     0.7835    0.8940    0.8351      1000
          科技     0.9564    0.8550    0.9029      1000
          教育     0.8351    0.7190    0.7727      1000
          时尚     0.9289    0.9010    0.9147      1000
          游戏     0.9875    0.7870    0.8759      1000
          家居     0.9170    0.8620    0.8887      1000
          体育     0.9511    0.9910    0.9706      1000
          娱乐     0.7180    0.9470    0.8167      1000

    accuracy                         0.8767     10000
   macro avg     0.8860    0.8767    0.8774     10000
weighted avg     0.8860    0.8767    0.8774     10000

Confusion Matrix...
[[948  13  26   1   3   0   0   3   0   6]
 [ 19 863  26   0  77   0   0   0   3  12]
 [ 12  45 894   0   7   3   0  19   3  17]
 [  2   0   3 855   2  19   6  16   1  96]
 [  6  88 104   1 719  23   0   6   9  44]
 [  0   1   4   1   3 901   1  12  11  66]
 [  0   3  10  32   8  13 787  20  12 115]
 [  4  23  68   2  21   3   0 862   1  16]
 [  0   5   1   0   3   0   0   0 991   0]
 [  0   4   5   2  18   8   3   2  11 947]]

## 方法
1.结果0.80882909063  
2.pre_label采用的是关键词个数都为50个，但是适当调整了训练集各种类别的个数，具体为

3.generate_data采用的是去停用词之后，只看前128个字符
4.predict采用的是方法二的type=1
label_num = {
    "财经" : 1000,
    "时政" : 1500,
    "房产" : 2500,
    "科技" : 1500,
    "教育" : 3000,
    "时尚" : 1500,
    "游戏" : 2000,
    "家居" : 1500,
    "体育" : 1500,
    "娱乐" : 2000,
}
